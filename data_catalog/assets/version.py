from data_catalog.client.versioning import VersionResponse
import pandas as pd

from data_catalog.assets.asset_service import AssetService
import data_catalog.assets.asset


class Version(VersionResponse):
    """
    A service level class to extend the VersionResponse class generated by OpenAPI.
    It provides methods to obtain data from different versions of an Asset
    """
    asset: data_catalog.assets.asset.Asset

    def __init__(self, id=None, name=None, asset_id=None, contents=None, created_at=None, local_vars_configuration=None):
        """
        Constructor of Version class
        :param id:
        :param name:
        :param asset_id:
        :param contents:
        :param created_at:
        :param local_vars_configuration:
        """

        super().__init__(id=id, created_at=created_at, name=name, asset_id=asset_id,
                         contents=contents, local_vars_configuration=local_vars_configuration)

        with AssetService() as asset_service:
            self.asset = asset_service.get_asset(self.asset_id)

    @staticmethod
    def from_response(version_response: VersionResponse):
        """
        Converts a VersionResponse into a Version by generating a new Version
        :param version_response: VersionResponse class generated by OpenApi
        :return: version
        :rtype: Version
        """
        return Version(id=version_response.id, created_at=version_response.created_at, name=version_response.name,
                       asset_id=version_response.asset_id, contents=version_response.contents,
                       local_vars_configuration=version_response.local_vars_configuration)

#    def get_data(self) -> pd.DataFrame:
 #       """
 #      Obtains data from a version by calling the method with the same name from Asset
  #      :return: data frame
   #     :rtype: pd.DataFrame
    #    """
     #   return self.asset.get_data(version=self.name)
